{"version":3,"sources":["../src/reexports.ts","../src/instance.ts","../src/adapter.ts"],"sourcesContent":["import type {\n  LylaRequestOptions as LylaCoreRequestOptions,\n  LylaResponse as LylaCoreResponse,\n  Lyla as LylaCore,\n  LylaRequestOptionsWithContext as LylaCoreRequestOptionsWithContext,\n  LylaProgress as LylaCoreProgress\n} from '@lylajs/core'\nimport type {\n  LylaResponseError as LylaCoreResponseError,\n  LylaError as LylaCoreError,\n  LylaNonResponseError as LylaCoreNonResponseError\n} from '@lylajs/core'\nimport type { LylaAdapterMeta } from './adapter'\n\n// core\nexport type Lyla<C = undefined> = LylaCore<C, LylaAdapterMeta>\nexport type LylaRequestOptions<C = undefined> = LylaCoreRequestOptions<\n  C,\n  LylaAdapterMeta\n>\nexport type LylaRequestOptionsWithContext<C = undefined> =\n  LylaCoreRequestOptionsWithContext<C, LylaAdapterMeta>\nexport type LylaResponse<T = any, C = undefined> = LylaCoreResponse<\n  T,\n  C,\n  LylaAdapterMeta\n>\n\n// error\nexport type LylaResponseError<C = undefined> = LylaCoreResponseError<\n  C,\n  LylaAdapterMeta\n>\nexport type LylaNonResponseError<C = undefined> = LylaCoreNonResponseError<\n  C,\n  LylaAdapterMeta\n>\nexport type LylaError<C = undefined> = LylaCoreError<C, LylaAdapterMeta>\n\nexport type LylaProgress = LylaCoreProgress<LylaAdapterMeta>\n\nexport { LYLA_ERROR, LylaAbortController } from '@lylajs/core'\n","import { createLyla as coreCreateLyla } from '@lylajs/core'\nimport { adapter } from './adapter'\nimport type {\n  LylaRequestOptions,\n  LylaRequestOptionsWithContext\n} from './reexports'\n\nexport const { lyla, isLylaError } = coreCreateLyla(adapter, {\n  context: undefined\n})\n\nexport const createLyla = <C>(\n  options: LylaRequestOptionsWithContext<C>,\n  ...overrides: LylaRequestOptions<C>[]\n) => {\n  return coreCreateLyla(adapter, options, ...overrides)\n}\n","import type {\n  LylaAdapter,\n  LylaAdapterMeta as LylaCoreAdapterMeta\n} from '@lylajs/core'\nimport { headersKeyToLowerCase } from '@lylajs/core'\nimport type {\n  NetworkErrorDetail,\n  ResponseDetail,\n  UniRequest,\n  UniRequestMethod\n} from './types'\n\ndeclare const uni: {\n  request: UniRequest\n}\n\nexport interface LylaAdapterMeta extends LylaCoreAdapterMeta {\n  method: UniRequestMethod\n  networkErrorDetail: NetworkErrorDetail\n  responseDetail: ResponseDetail\n  responseType: 'arraybuffer' | 'text'\n  requestBody: string | ArrayBuffer | Record<string, unknown>\n  progressDetail: never\n  originalRequest: never\n}\n\nexport const adapter: LylaAdapter<LylaAdapterMeta> = ({\n  url,\n  method,\n  headers,\n  body,\n  responseType,\n  onResponse,\n  onNetworkError\n  // Not used, just leave it here\n  // json,\n  // withCredentials,\n  // onDownloadProgress,\n  // onUploadProgress,\n}): {\n  abort: () => void\n} => {\n\n  const requestTask = uni.request({\n    url,\n    method,\n    header: headers,\n    //@ts-ignore\n    data: isJSON(body) ? JSON.parse(body) : body,\n    responseType,\n    // https://developers.weixin.qq.com/miniprogram/dev/api/network/request/wx.request.html\n    // Docs said if it's not json, response data won't be transformed to json.\n    dataType: 'json',\n    fail(res) {\n      onNetworkError(res)\n    },\n    success(res) {\n      onResponse(\n        {\n          body: res.data as string | ArrayBuffer,\n          status: res.statusCode,\n          headers: headersKeyToLowerCase(res.header)\n        },\n        res\n      )\n    }\n  })\n  return {\n    abort() {\n      requestTask.abort()\n    }\n  }\n}\n\n\nfunction isJSON(str: any) {\n  if (typeof str === 'string' && str) {\n    if (Object.prototype.toString.call(JSON.parse(str)) === '[object Object]') {\n      return true;\n    }\n    return false;\n  }\n  return false\n}\n"],"mappings":";AAyCA,SAAS,YAAY,2BAA2B;;;ACzChD,SAAS,cAAc,sBAAsB;;;ACI7C,SAAS,6BAA6B;AAsB/B,IAAM,UAAwC,CAAC;AAAA,EACpD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMF,MAEK;AAEH,QAAM,cAAc,IAAI,QAAQ;AAAA,IAC9B;AAAA,IACA;AAAA,IACA,QAAQ;AAAA;AAAA,IAER,MAAM,OAAO,IAAI,IAAI,KAAK,MAAM,IAAI,IAAI;AAAA,IACxC;AAAA;AAAA;AAAA,IAGA,UAAU;AAAA,IACV,KAAK,KAAK;AACR,qBAAe,GAAG;AAAA,IACpB;AAAA,IACA,QAAQ,KAAK;AACX;AAAA,QACE;AAAA,UACE,MAAM,IAAI;AAAA,UACV,QAAQ,IAAI;AAAA,UACZ,SAAS,sBAAsB,IAAI,MAAM;AAAA,QAC3C;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,EACF,CAAC;AACD,SAAO;AAAA,IACL,QAAQ;AACN,kBAAY,MAAM;AAAA,IACpB;AAAA,EACF;AACF;AAGA,SAAS,OAAO,KAAU;AACxB,MAAI,OAAO,QAAQ,YAAY,KAAK;AAClC,QAAI,OAAO,UAAU,SAAS,KAAK,KAAK,MAAM,GAAG,CAAC,MAAM,mBAAmB;AACzE,aAAO;AAAA,IACT;AACA,WAAO;AAAA,EACT;AACA,SAAO;AACT;;;AD5EO,IAAM,EAAE,MAAM,YAAY,IAAI,eAAe,SAAS;AAAA,EAC3D,SAAS;AACX,CAAC;AAEM,IAAM,aAAa,CACxB,YACG,cACA;AACH,SAAO,eAAe,SAAS,SAAS,GAAG,SAAS;AACtD;","names":[]}